Upcoming
--------
# Parallel computing and Monte Carlo algorithms (see Rosenthal (2000)) and R package parallel
# Bayesian estimation according to Griffiths (2002)
# EM algorithm

Version 1.3-1 (29.11.2011)
--------------------------
# Rewritten the Gibbs sampler in R/Fortran to allow for a precision matrix H instead of covariance matrix Sigma. This has 2 advantages:
  1. The Gibbs sampler code becomes much leaner and easier to understand when stated in terms of precision matrix H. No more matrix inversions are necessary,
     so for higher dimensions this is definitely also a performance gain.
  2. In Bayesian statistics, people work with precision matrices rather than with covariance matrices. They often have high dimensions 
     and sparse precision matrices which are hard to invert. 
     So, when using precision matrix H directly, there is no need to invert nearly singular precision matrices and 
     the Gibbs sampler is still powerfull with, say n=500.
# Method of Moments and GMM: We included a method of moments estimator (Manjunath/Wilhelm (2009)) and a GMM estimator.


Version 1.2-2 (25.05.2011)
--------------------------
# re-added GMM estimation in method gmm.tmvtnorm(). Works now with moment conditions.

Version 1.2-1 (23.04.2011)
--------------------------
# rtmvnorm() works now with general linear constraints a<= Dx<=b, implemented with both rejection sampling and Gibbs sampling (Geweke (1991))
# Bugfix in dtmvt() thanks to Jason Kramer: Using type="shifted" in pmvt(). TODO: check ptmvt() method!

Version 1.1-5 (20.11.2010)
--------------------------
# Fixed a bug with LAPACK and BLAS/FLIBS libraries:
Prof. Ripley/Writing R extensions: "For portability, the macros @code{BLAS_LIBS} and @code{FLIBS} should always be included @emph{after} @code{LAPACK_LIBS}."
# removed GMM estimation method gmm.tmvnorm(), since it does not seem to work well in the bivariate case. Will check it first before resubmitting it.

Version 1.1-4 (10.10.2010)
--------------------------
# added GMM estimation method gmm.tmvnorm()
# optimized mtmvnorm(): precalcuted F_a[i] in a separate loop which improved the computation of the mean, suggested by Miklos.Reiter@sungard.com
# added a flag doComputeVariance (default TRUE), so users which are only interested in the mean, can compute
  only the variance (BTW: this flag does not make sense for the mean, since the mean has to be calculated anyway.)   

Version 1.1-3 (21.09.2010)
--------------------------
# bugfix/improvement in mle.tmvnorm() so that all arguments to mle() are expanded.


Version 1.1-2 (01.09.2010)
--------------------------
# added box constraints parameters "lower.bounds"/"upper.bounds" to mle.tmvnorm() for the use with method "L-BFGS-B"
# added cholesky=TRUE parameter for mle.tmvtnorm() for Cholesky decomposition of sigma


Version 1.1-1 (18.07.2010)
--------------------------
# Added estimation methods : MLE in mle.tmvtnorm()
# Added RUnit tests for mle.tmvtnorm()
# Wrote package vignette for Maximum Likelihood estimation.
# TODO: Optimierung von mtmvnorm()


Version 1.0-2 (04.03.2010)
--------------------------
# Added input checks for rtmvt()
# Added RUnit tests for rtmvt() and dtmvt().

Version 1.0-1 (03.03.2010)
--------------------------
# Bugfix in rtmvt() für mean <> 0.
# Version 0.10-4 umbenannt in Version 1.0-1

Version 0.10-2 (22.02.2010)
--------------------------
# Added Gibbs sampling method for Student-t : rtmvt.gibbs()

Version 0.10-1 (28.01.2010)
--------------------------
# Methods for the truncated multivariate t-Distribution : rtmvt(), dtmvt() und ptmvt()
  and ptmvt.marginal()

Version 0.9-2 (30.12.2009/03.01.2009)
--------------------------
# Implementation of "thinning technique" for Gibbs sampling: Added parameter thinning=1 to rtmvnorm.gibbs() for thinning of Markov chains, 
  i.e. reducing autocorrelations of random samples
# Documenting additional arguments "thinning", "start.value" and "burn.in", for rmvtnorm.gibbs() 
# Added parameter "burn-in" and "thinning" in the Fortran code for discarding burn-in samples and thinng the Markov chain. 
# Added parameter log=FALSE to dtmvnorm.marginal()
# Added parameter margin=NULL to dtmvnorm() as an interface/wrapper to marginal density functions dtmvnorm.marginal() and dtmvnorm.marginal2()
# Code polishing and review
# Function checkTmvArgs() for common checking of arguments
# Added more RUnit tests
# Makefile optimiert
# CITATION file eingebunden/geändert


Version 0.8-2 (30.09.2009)
-----------------------------------
# Added formulae to documentation

Version 0.8-1 (22.09.2009)
-----------------------------------
# One-dimensional marginal probability added (ptmvnorm.marginal())
# Fortran 90 code for Gibbs Sampler (rtmvnorm.gibbs())
# RUnit Tests ausgeweitet

Version 0.7-1 (09.08.2009)
-----------------------------------
# First and second moment calculation for general mu-sigma case
  a) Leppard (1989) für einseitige Truncation im allgemeinen Fall
  b) Lee (1983) für Erwartungswert im allgemeinen Fall (sigma und zweiseitige Truncation)
# Estimation : MLE vs. IV-Schätzer (Amemiya (1974)) vs. Bayes-Schätzer (Griffith)
# dtmvnorm:
  a) Bugfix in dtmvnorm : Wenn ausserhalb der Support-Region, dann return 0 statt NA
  b) Erweiterung in dtmvnorm : log = TRUE|FALSE
  c) Vektorisierung einbauen
# RUnit-Tests eingebaut
# Makefile erweitert
  make RUnit
  make check
  make build-prepare
# Bugfix in rtnorm.gibbs()

Version 0.6-1 (06.06.2009)
--------------------------
# Neue Methode mtmvnorm() zur Berechnung von Erwartungswert/Varianz
# Änderungen:
1. Wenn Akzeptanzrate alpha zu niedrig, Begrenzung der maximalen Anzahl der Samples beim Rejection Sampling nach oben wg. Memory-Begrenzungen
2. Beim Gibbs-Sampling kleinere Änderungen zur Geschwindigkeitssteigerung: Aufruf von pnorm() vektorisiert.
# Fall d==1 noch für Gibbs-Sampling eingebaut.

Version 0.5-1 (30.04.2009)
--------------------------
# rtmvnorm erweitert um Gibbs Sampler (rtmvnorm.gibbs())

Version 0.4-1 (29.03.2009)
--------------------------
# "00Index" angelegt
# Bugfix in rtmvnorm

Version 0.4 (28.03.2009)
------------------------
# Überarbeitung der Dokumentation
# Fertig für CRAN-Submission

Version 0.3 (01.03.2009)
------------------------
# Neue Funktion für Bestimmung der Quantile in einer Dimension: qtmvnorm.marginal()

Version 0.2 (16.02.2009)
------------------------
# Bugfix in rtmvnorm()